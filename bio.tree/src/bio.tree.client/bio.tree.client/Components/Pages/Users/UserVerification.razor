@page "/user-verification/{VerificationToken}"
@using bio.tree.client.Services.Abstractions
@using bio.tree.client.Enums
@inject IUserService UserService;

@if (ResponseStatus == ResponseStatus.None)
{
    <div class="text-center">
        <div class="spinner-grow m-5" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else if (ResponseStatus == ResponseStatus.Success)
{
    <div class="row">
        <div class="col-md-6 offset-3">
            <div class="alert alert-success text-center" role="alert">
                <h4 class="alert-heading">Well done!</h4>
                <p>Now your account is active</p>
                <hr>
                <p class="mb-0">
                    <NavLink class="nav-link" href="/sign-in">
                        Click here to log in
                    </NavLink>
                </p>
            </div>
        </div>
    </div>   
}
else
{
    <div class="row">
        <div class="col-md-6 offset-3">
            <div class="alert alert-danger text-center" role="alert">
                <h4 class="alert-heading">Ops!</h4>
                <p>There was an error. Try again or contact with us!</p>
            </div>
        </div>
    </div>   
}
@code {
    [Parameter] 
    public string VerificationToken { get; set; }

    ResponseStatus ResponseStatus { get; set; } = ResponseStatus.None;

    protected override async Task OnParametersSetAsync()
    {
        var task = UserService.Verify(VerificationToken);
        ResponseStatus = ResponseStatus.None;
        var response = await task;
        ResponseStatus = response.IsSuccessStatusCode ? ResponseStatus.Success : ResponseStatus.Error;
    }
}